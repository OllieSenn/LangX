@page "{username}"
@model LangX.Pages.ProfileModel
@using System.Security.Claims
@{
    ViewData["Title"] = "User Profile";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - LangX</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="site.css">

    <style>
        .username-link {
            color: inherit;
            text-decoration: none;
            font-weight: bold;
        }

            .username-link:hover {
                text-decoration: underline;
                color: #0d6efd;
                cursor: pointer;
            }

        :root {
            --blue: #0055A4;
            --white: #FFFFFF;
            --red: #EF4135;
            --light-blue: #5d8dc9;
            --light-red: #f27971;
            --bg-light: #f9f9f9;
            --text-dark: #333;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --border-color: #dee2e6;
            --success-color: #28a745;
            --info-color: #17a2b8;
            --font-main: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            font-family: var(--font-main);
            background-color: var(--bg-light);
            color: var(--text-dark);
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 1200px;
            padding: 1.5rem 15px;
        }

        .navbar {
            background: linear-gradient(to right, var(--blue), var(--white), var(--red)) !important;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 0.5rem 1rem;
        }

        .navbar-brand {
            color: var(--white) !important;
            font-weight: bold;
            font-size: 1.5rem;
            text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.5);
        }

        .nav-link {
            color: var(--white) !important;
            font-weight: 500;
            padding: 0.4rem 0.8rem !important;
            border-radius: 4px;
            transition: all 0.2s ease;
        }

            .nav-link:hover,
            .nav-link.active {
                background-color: rgba(255, 255, 255, 0.2);
                transform: translateY(-1px);
            }

        .navbar-nav .nav-item button {
            padding: 0.4rem 0.8rem;
            font-weight: 500;
        }

        /* ===== Cards ===== */
        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            overflow: hidden;
            margin-bottom: 1.5rem;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

            .card:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            padding: 0.8rem 1.25rem;
            font-weight: bold;
        }

            .card-header h4 {
                font-size: 1.2rem;
                margin: 0;
            }

            /* French-themed card headers */
            .card-header.bg-primary {
                background-color: var(--blue) !important;
            }

            .card-header.bg-secondary {
                background-color: var(--gray) !important;
            }

            .card-header.bg-info {
                background-color: var(--light-blue) !important;
            }

        .card-body {
            padding: 1.25rem;
        }

        /* ===== Profile Avatar ===== */
        .rounded-circle {
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

            .rounded-circle:hover {
                transform: scale(1.05);
            }

        /* ===== Badges ===== */
        .badge {
            padding: 0.4em 0.6em;
            font-size: 0.85rem;
            font-weight: 500;
            border-radius: 6px;
            transition: all 0.2s ease;
        }

            .badge:hover {
                transform: translateY(-2px);
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }

            .badge.bg-primary {
                background-color: var(--blue) !important;
            }

            .badge.bg-secondary {
                background-color: var(--gray) !important;
            }

            .badge.bg-success {
                background-color: var(--success-color) !important;
            }

        /* ===== Buttons ===== */
        .btn {
            padding: 0.375rem 0.75rem;
            font-size: 0.875rem;
            border-radius: 4px;
            transition: all 0.2s ease;
        }

            .btn:hover {
                transform: translateY(-1px);
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }

        .btn-outline-primary {
            color: var(--blue);
            border-color: var(--blue);
        }

            .btn-outline-primary:hover {
                background-color: var(--blue);
                color: var(--white);
            }

        .btn-outline-danger {
            color: var(--red);
            border-color: var(--red);
        }

            .btn-outline-danger:hover {
                background-color: var(--red);
                color: var(--white);
            }

        .btn-outline-secondary {
            color: var(--gray);
            border-color: var(--gray);
        }

            .btn-outline-secondary:hover {
                background-color: var(--gray);
                color: var(--white);
            }

        .btn-primary {
            background-color: var(--blue);
            border-color: var(--blue);
        }

            .btn-primary:hover {
                background-color: #004488;
                border-color: #004488;
            }

        /* ===== Posts ===== */
        .post-item {
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            margin-bottom: 1.5rem;
            transition: transform 0.2s ease;
        }

            .post-item:hover {
                transform: translateY(-2px);
            }

        .post-meta {
            font-size: 0.85rem;
            color: var(--gray);
        }

        .post-content {
            margin: 1rem 0;
            line-height: 1.6;
        }

        .post-image img {
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease;
        }

            .post-image img:hover {
                transform: scale(1.02);
            }

        /* ===== Forms ===== */
        .form-control {
            padding: 0.375rem 0.75rem;
            font-size: 0.9rem;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

            .form-control:focus {
                border-color: var(--blue);
                box-shadow: 0 0 0 0.2rem rgba(0, 85, 164, 0.25);
            }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        /* ===== Pagination ===== */
        .pagination {
            margin-top: 1.5rem;
        }

            .pagination .page-link {
                color: var(--blue);
                background-color: var(--white);
                border: 1px solid var(--border-color);
                padding: 0.375rem 0.75rem;
                font-size: 0.875rem;
                transition: all 0.2s ease;
            }

                .pagination .page-link:hover {
                    background-color: var(--light-gray);
                    color: var(--blue);
                    z-index: 2;
                }

            .pagination .page-item.active .page-link {
                background-color: var(--blue);
                border-color: var(--blue);
                color: white;
            }

            .pagination .page-item.disabled .page-link {
                color: var(--gray);
                pointer-events: none;
                background-color: var(--white);
                border-color: var(--border-color);
            }

        /* ===== Utilities ===== */
        .text-muted {
            color: var(--gray) !important;
        }

        .border-bottom {
            border-bottom: 1px solid var(--border-color) !important;
        }

        .username-link {
            color: var(--blue) !important;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.2s ease;
        }

            .username-link:hover {
                color: var(--light-blue) !important;
                text-decoration: underline;
            }

        /* ===== Dropdown Menu ===== */
        .dropdown-menu {
            border: none;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 0.5rem 0;
        }

        .dropdown-item {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            color: var(--text-dark);
            transition: background-color 0.2s ease;
        }

            .dropdown-item:hover {
                background-color: var(--light-gray);
            }

            .dropdown-item.text-danger {
                color: var(--red) !important;
            }

                .dropdown-item.text-danger:hover {
                    background-color: rgba(239, 65, 53, 0.1);
                }

        /* ===== Responsive Adjustments ===== */
        @@media (max-width: 767.98px) {
            .card-header h4 {
                font-size: 1.1rem;
            }

            .btn {
                padding: 0.25rem 0.5rem;
                font-size: 0.8rem;
            }

            .post-meta span {
                display: block;
                margin-bottom: 0.25rem;
            }

                .post-meta span.ms-3 {
                    margin-left: 0 !important;
                }
        }

        /* ===== Stats Icons ===== */
        .card-body p i {
            margin-right: 0.5rem;
            color: var(--blue);
        }

        /* ===== Alert Styling ===== */
        .alert {
            border-radius: 8px;
            padding: 1rem;
            border: none;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .alert-info {
            background-color: rgba(23, 162, 184, 0.1);
            color: var(--info-color);
        }

        /* ===== Tooltips ===== */
        .tooltip {
            font-size: 0.8rem;
        }

        .tooltip-inner {
            background-color: var(--blue);
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            max-width: 200px;
        }

        /* ===== Animations ===== */
        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card, .post-item {
            animation: fadeIn 0.3s ease-out forwards;
        }

            /* Stagger animation for posts */
            .post-item:nth-child(1) {
                animation-delay: 0.1s;
            }

            .post-item:nth-child(2) {
                animation-delay: 0.2s;
            }

            .post-item:nth-child(3) {
                animation-delay: 0.3s;
            }

            .post-item:nth-child(4) {
                animation-delay: 0.4s;
            }

            .post-item:nth-child(5) {
                animation-delay: 0.5s;
            }

    </style>
    </head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">LangX</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <form method="get" action="/Home" style="margin:0; padding:0;">
                            <button type="submit" class="nav-link active" style="background-color: transparent !important; background: none !important; color: black !important;">
                                Home
                            </button>
                        </form>
                    </li>
                    <li class="nav-item">
                        <form method="post" style="margin:0; padding:0;">
                            <button type="submit" asp-page-handler="ViewProfile" class="nav-link" style="background-color: transparent !important; background: none !important; color: black !important;">
                                Profile
                            </button>
                        </form>
                    </li>
                    <li class="nav-item">
                        <form method="post" asp-page-handler="LogOut" style="margin:0; padding:0;">
                            <button type="submit" class="nav-link" style="background-color: transparent !important; background: none !important; color: black !important;">
                                Logout
                            </button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h4>Profile Information</h4>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center mx-auto"
                                 style="width: 100px; height: 100px; font-size: 48px;">
                                @(Model.ProfileUser.Username != null && Model.ProfileUser.Username.Length > 0 ? Model.ProfileUser.Username.Substring(0, 1).ToUpper() : "U")
                            </div>
                        </div>
                        <h5 class="card-title">@Model.ProfileUser.Username</h5>
                        <p class="card-text"><strong>Name:</strong> @Model.ProfileUser.Name</p>
                        <p class="card-text"><strong>Email:</strong> @Model.ProfileUser.Email</p>

                        <div class="mt-3">
                            <h6>Language Badges</h6>
                            @if (Model.UserBadges != null && Model.UserBadges.Any())
                            {
                                <div class="d-flex flex-wrap gap-2 mb-2">
                                    @foreach (var badge in Model.UserBadges)
                                    {
                                        <div class="badge bg-success p-2"
                                             data-bs-toggle="tooltip"
                                             data-bs-placement="top"
                                             title="@badge.BadgeName Expert - Awarded on @badge.AwardedDate.ToString("MMM dd, yyyy")">
                                            @switch (badge.BadgeName.ToLower())
                                            {
                                                case "food":
                                                    <i class="fas fa-utensils"></i>
                                                    break;
                                                case "travel":
                                                    <i class="fas fa-plane"></i>
                                                    break;
                                                case "music":
                                                    <i class="fas fa-music"></i>
                                                    break;
                                                default:
                                                    <i class="@badge.GetIconClass()"></i>
                                                    break;
                                            }
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No badges earned yet. Complete proficiency quizzes to earn badges!</p>
                            }
                        </div>

                        <div class="d-flex justify-content-between mt-3">
                            <div>
                                <a asp-page="/Profile/Followers" asp-route-username="@Model.ProfileUser.Username" asp-route-tab="followers" class="text-decoration-none">
                                    <span class="badge bg-primary">@Model.FollowersCount Followers</span>
                                </a>
                                <a asp-page="/Profile/Followers" asp-route-username="@Model.ProfileUser.Username" asp-route-tab="following" class="text-decoration-none">
                                    <span class="badge bg-secondary">@Model.FollowingCount Following</span>
                                </a>
                            </div>

                            @if (Model.IsCurrentUser)
                            {
                                <button type="button" id="edit-profile-btn" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i> Edit Profile
                                </button>
                            }
                            else if (User.Identity.IsAuthenticated)
                            {
                                @if (Model.IsFollowing)
                                {
                                    <form method="post" asp-page-handler="Unfollow" asp-route-username="@Model.ProfileUser.Username">
                                        <button type="submit" class="btn btn-outline-danger btn-sm">
                                            <i class="bi bi-person-dash"></i> Unfollow
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <form method="post" asp-page-handler="Follow" asp-route-username="@Model.ProfileUser.Username">
                                        <button type="submit" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-person-plus"></i> Follow
                                        </button>
                                    </form>
                                }
                            }
                        </div>

                        <!-- edit profile form -->
                        <div id="profile-edit-form" class="d-none mt-3">
                            <form method="post" asp-page-handler="EditProfile">
                                <div class="mb-3">
                                    <label for="Username" class="form-label">Username</label>
                                    <input type="text" class="form-control" id="Username" name="Username" value="@Model.ProfileUser.Username" required>
                                    <div class="form-text">Choose a unique username.</div>
                                </div>

                                <div class="mb-3">
                                    <label for="Name" class="form-label">Full Name</label>
                                    <input type="text" class="form-control" id="Name" name="Name" value="@Model.ProfileUser.Name" required>
                                </div>

                                <div class="d-flex justify-content-end">
                                    <button type="button" id="cancel-edit-btn" class="btn btn-outline-secondary me-2">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header bg-secondary text-white">
                        <h4>Stats</h4>
                    </div>
                    <div class="card-body">
                        <p><i class="bi bi-file-text"></i> Total Posts: @Model.PostCount</p>
                        <p><i class="bi bi-chat"></i> Comments: @Model.CommentCount</p>
                        <p><i class="bi bi-hand-thumbs-up"></i> Received Likes: @Model.TotalLikes</p>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h4>@Model.ProfileUser.Username's Posts</h4>
                    </div>
                    <div class="card-body">
                        @if (Model.Posts != null && Model.Posts.Any())
                        {
                            <div id="posts-container">
                                @foreach (var post in Model.Posts)
                                {
                                    <div class="post-item mb-4 pb-3 border-bottom">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div class="post-meta text-muted small">
                                                <span><i class="bi bi-person-circle"></i> @post.UserName</span>
                                                <span class="ms-3"><i class="bi bi-calendar"></i> @post.CreatedAt.ToString("MMM dd, yyyy")</span>
                                                <span class="ms-3"><i class="bi bi-hand-thumbs-up"></i> @post.LikesCount Likes</span>
                                                <span class="ms-3"><i class="bi bi-chat"></i> @post.Comments.Count Comments</span>
                                            </div>

                                            @if (Model.IsCurrentUser)
                                            {
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="postActions-@post.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                                        <i class="bi bi-three-dots"></i>
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="postActions-@post.Id">
                                                        <li>
                                                            <button class="dropdown-item edit-post-btn" type="button" data-post-id="@post.Id">
                                                                <i class="bi bi-pencil"></i> Edit Post
                                                            </button>
                                                        </li>
                                                        <li>
                                                            <form method="post" asp-page-handler="DeletePost" asp-route-postId="@post.Id"
                                                                  onsubmit="return confirm('Are you sure you want to delete this post? This action cannot be undone.');">
                                                                <button type="submit" class="dropdown-item text-danger">
                                                                    <i class="bi bi-trash"></i> Delete Post
                                                                </button>
                                                            </form>
                                                        </li>
                                                    </ul>
                                                </div>
                                            }
                                        </div>

                                        <div class="post-content" id="post-content-@post.Id">
                                            @Html.Raw(post.Content)
                                        </div>

                                        <!-- Hidden edit form that will be shown when edit is clicked -->
                                        <div class="edit-form d-none" id="edit-form-@post.Id">
                                            <form method="post" asp-page-handler="EditPost">
                                                <input type="hidden" name="PostId" value="@post.Id" />
                                                <div class="mb-3">
                                                    <textarea class="form-control" name="Content" rows="4" required>@post.Content</textarea>
                                                </div>
                                                <div class="d-flex justify-content-end">
                                                    <button type="button" class="btn btn-outline-secondary me-2 cancel-edit-btn" data-post-id="@post.Id">Cancel</button>
                                                    <button type="submit" class="btn btn-primary">Save Changes</button>
                                                </div>
                                            </form>
                                        </div>

                                        @if (!string.IsNullOrEmpty(post.ImagePath))
                                        {
                                            <div class="post-image mt-2 mb-2">
                                                <img src="@post.ImagePath" alt="Post Image" class="img-fluid rounded" style="max-height: 300px;">
                                            </div>
                                        }

                                        <div class="mt-2">
                                            <a href="/Details/@post.Id" class="btn btn-sm btn-outline-secondary">View Post</a>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Pagination controls -->
                            <nav aria-label="Post navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(Model.CurrentPage <= 0 ? "disabled" : "")">
                                        <a class="page-link"
                                           asp-page="/Profile"
                                           asp-route-username="@Model.ProfileUser.Username"
                                           asp-route-page="@(Model.CurrentPage - 1)"
                                           aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span> Previous
                                        </a>
                                    </li>

                                    <!-- Current page indicator -->
                                    <li class="page-item active">
                                        <span class="page-link">
                                            Page @(Model.CurrentPage + 1)
                                        </span>
                                    </li>

                                    <li class="page-item @(!Model.HasMorePosts ? "disabled" : "")">
                                        <a class="page-link"
                                           asp-page="/Profile"
                                           asp-route-username="@Model.ProfileUser.Username"
                                           asp-route-page="@(Model.CurrentPage + 1)"
                                           aria-label="Next">
                                            Next <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <p>@Model.ProfileUser.Username hasn't published any posts yet.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>

    <script>
        // Single DOMContentLoaded event handler with all functionality
        document.addEventListener('DOMContentLoaded', function() {
            // 1. Dropdown functionality
            document.querySelectorAll('.dropdown-toggle').forEach(function(dropdownToggle) {
                dropdownToggle.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();

                    // Find the parent dropdown
                    const dropdown = this.closest('.dropdown');

                    // Find the dropdown menu within this dropdown
                    const dropdownMenu = dropdown.querySelector('.dropdown-menu');

                    // Close any open dropdowns first
                    document.querySelectorAll('.dropdown-menu.show').forEach(function(menu) {
                        if (menu !== dropdownMenu) {
                            menu.classList.remove('show');
                        }
                    });

                    // Toggle this dropdown
                    dropdownMenu.classList.toggle('show');

                    // Add a click handler to the document to close dropdown when clicking outside
                    setTimeout(function() {
                        const closeDropdowns = function(e) {
                            if (!dropdown.contains(e.target)) {
                                dropdownMenu.classList.remove('show');
                                document.removeEventListener('click', closeDropdowns);
                            }
                        };
                        document.addEventListener('click', closeDropdowns);
                    }, 0);
                });
            });

            // 2. Edit post buttons
            document.querySelectorAll('.edit-post-btn').forEach(button => {
                button.addEventListener('click', function(e) {
                    const postId = this.getAttribute('data-post-id');

                    // Close the dropdown menu if this button is inside one
                    const dropdownMenu = this.closest('.dropdown-menu');
                    if (dropdownMenu) {
                        dropdownMenu.classList.remove('show');
                    }

                    // Hide the post content
                    document.getElementById(`post-content-${postId}`).classList.add('d-none');

                    // Show the edit form
                    document.getElementById(`edit-form-${postId}`).classList.remove('d-none');

                    // Prevent event bubbling to avoid conflicts
                    e.stopPropagation();
                });
            });

            // 3. Cancel edit buttons
            document.querySelectorAll('.cancel-edit-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const postId = this.getAttribute('data-post-id');

                    // Show the post content
                    document.getElementById(`post-content-${postId}`).classList.remove('d-none');

                    // Hide the edit form
                    document.getElementById(`edit-form-${postId}`).classList.add('d-none');
                });
            });

            // 4. Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // 5. Edit profile functionality
            const editProfileBtn = document.getElementById('edit-profile-btn');
            const profileEditForm = document.getElementById('profile-edit-form');
            const cancelEditBtn = document.getElementById('cancel-edit-btn');

            if (editProfileBtn) {
                editProfileBtn.addEventListener('click', function() {
                    // Show the edit form
                    profileEditForm.classList.remove('d-none');
                    // Hide the edit button
                    editProfileBtn.classList.add('d-none');
                });
            }

            if (cancelEditBtn) {
                cancelEditBtn.addEventListener('click', function() {
                    // Hide the edit form
                    profileEditForm.classList.add('d-none');
                    // Show the edit button
                    editProfileBtn.classList.remove('d-none');
                });
            }

            // 6. Delete button styling (if needed)
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = 'rgba(220, 53, 69, 0.1)';
                });
                button.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = 'transparent';
                });
            });
        });
    </script>

    <style>
        /* Ensure dropdown menus display properly */
        .dropdown-menu.show {
            display: block !important;
            position: absolute !important;
            z-index: 1050 !important;
            transform: translate3d(0px, 38px, 0px) !important;
            top: 0 !important;
            left: auto !important;
            right: 0 !important;
            will-change: transform !important;
        }

        /* Delete button styling - extra small version */
        .delete-btn {
            background-color: transparent !important;
            border: none !important;
            color: #dc3545 !important; /* Red color for delete */
            padding: 0.1rem !important;
            margin: 0 !important;
            font-size: 0.7rem !important;
            line-height: 1 !important;
            border-radius: 3px !important;
            cursor: pointer !important;
            transition: all 0.2s ease !important;
            display: inline-flex !important;
            align-items: center !important;
            justify-content: center !important;
            width: 20px !important; /* Smaller fixed width */
            height: 20px !important; /* Smaller fixed height */
            min-width: 0 !important; /* Override any Bootstrap minimum width */
            min-height: 0 !important; /* Override any Bootstrap minimum height */
        }

            .delete-btn:hover {
                background-color: rgba(220, 53, 69, 0.1) !important; /* Light red background on hover */
                color: #bb2d3b !important; /* Darker red on hover */
            }

            .delete-btn:active {
                transform: translateY(1px) !important; /* Press effect */
            }

            .delete-btn i {
                font-size: 0.8rem !important; /* Smaller icon */
            }
    </style>
 
</body>